<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.greatbiscuit.hyxk.dao.UserDao">

    <resultMap type="top.greatbiscuit.hyxk.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="headerUrl" column="header_url" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="signature" column="signature" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="activationCode" column="activation_code" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               username,
               password,
               salt,
               email,
               header_url,
               nickname,
               gender,
               signature,
               type,
               status,
               activation_code,
               create_time
        from user
        where id = #{id}
    </select>

    <select id="queryByUsername" resultMap="UserMap">
        select id,
               username,
               password,
               salt,
               email,
               header_url,
               nickname,
               gender,
               signature,
               type,
               status,
               activation_code,
               create_time
        from user
        where username = #{username}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, password, salt, email, header_url, nickname, gender, signature, type, status,
                         activation_code, create_time)
        values (#{username}, #{password}, #{salt}, #{email}, #{headerUrl}, #{nickname}, #{gender}, #{signature},
                #{type}, #{status}, #{activationCode}, #{createTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="headerUrl != null and headerUrl != ''">
                header_url = #{headerUrl},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="signature != null and signature != ''">
                signature = #{signature},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="activationCode != null and activationCode != ''">
                activation_code = #{activationCode},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user
        where id = #{id}
    </delete>

    <select id="queryByEmail" resultMap="UserMap">
        select id,
               username,
               password,
               salt,
               email,
               header_url,
               nickname,
               gender,
               signature,
               type,
               status,
               activation_code,
               create_time
        from user
        where email = #{email}
    </select>

    <select id="querySimpleUserById" resultMap="UserMap">
        select id,
               header_url,
               nickname,
               gender,
               signature,
               type,
               create_time
        from user
        where id = #{id}
    </select>

</mapper>

